def load_logic():
    mother(X, Y) <=  (parent(X, Y) & gender(X, 'Female'))
    father(X, Y) <=  (parent(X, Y) & gender(X, 'Male'))
    married(X,Y) <= married(Y, X)
    husband(X,Y) <= married(X, Y) & gender(X, 'Male')
    wife(X,Y) <= husband(Y, X)
    child(Y, X) <= parent(X, Y)
    parent(X,Y) <= child(Y,X)
    decendent(X, Y) <= ancestor(Y, X)
    sibling(X,Y) <= (father(Z, X) & father(Z, Y) & ~(X==Y)) &  (mother(W, X) & mother(W, Y) & ~(X==Y))
    cousin(X, Y) <= parent(Z, X) & parent(W,Y) & sibling(Z, W)
    aunt(X,Y) <=  parent(Z, Y) & sibling(Z, X)  & gender(X, 'Female')
    aunt(X,Y) <=  uncle(Z, Y) & married(Z, X)
    uncle(X,Y) <=  parent(Z, Y) & sibling(Z, X) & gender(X, 'Male')
    uncle(X,Y) <=  aunt(Z, Y) & married(Z, X)
    ancestor(X, Y) <= (parent(W,Y) & (X==W))
    ancestor(X, Y) <= (parent(W,Y) & ancestor(X, W))
    brother(X,Y) <= sibling(X,Y) & gender(X, 'Male')
    sister(X, Y) <= sibling(X,Y) & gender(X, 'Female')
    inbred(X) <= (father(Y, X) & buendia_blood(Y, True)) &(mother(W, X) & buendia_blood(W, True))
    bastard(X) <= father(W,X) &  mother(Y, X) & ~married(W, Y)
    buendia_blood(X, True) <= parent(Y, X) & buendia_blood(Y, True)
    buendia(X, True) <= buendia_blood(X, True)
    buendia(X, True) <= married(X, Y) & buendia_blood(Y, True)
    son(X, Y) <= child(X, Y) &  gender(X, 'Male')
    daughter(X, Y) <= child(X, Y) &  gender(X, 'Female')